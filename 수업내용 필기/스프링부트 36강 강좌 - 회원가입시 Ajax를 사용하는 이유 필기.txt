회원가입시 Ajax를 사용하는 이유

첫 번째 이유 : 웹을 사용하든 앱을 사용하든 서버의 갯수가 1개로 다 처리를 하기 위해 사용하는 것
	
웹은 클라이언트가 회원가입을 요청 시 서버에서 DB에 회원가입을 수행하고
서버에서 클라이언트로 html파일을 전송을 하는 데
(클라이언트는 html파일에 대한 정보가 없으므로 서버에서 html파일에 정보를 전달해주어야 해당 페이지를
	클라이언트가 볼 수 있게 되므로)

앱은 다운로드를 할 때 이미 자바코드로 구성이된 화면 디자인을 다운 받고 있으므로
앱에서 회원가입을 할 시 서버에서 DB에 회원가입을 수행하고
서버에서 앱으로 html파일을 전송하면 앱에서는 화면 디자인이 자바 코드로 되어 있기 때문에
html파일을 해석하지 못하게 된다.
그리고 앱은 이미 화면 구성들이 클라이언트 측에서 다 다운로드가 되어져 있기 때문에
서버는 클라이언트에게 화면페이지를 보는 것이 아니라 회원가입을 성공했다는 데이터 값만 클라이언트에게 보내면 된다.

따라서 웹과 앱의 처리 방식이 다르므로 이렇게 구성을 해버리면 앱은 웹과 같은 서버를 사용하지 못하므로 2개의 서버를 만들어야 하므로 이것은 비효율적이므로 
웹 또한 html파일을 전송하는 것이아니라 데이터를 전송하는 것으로 구성을 하게 되면
웹과 앱은 하나의 서버만 사용하면 되게 된다.

웹은 회원가입 요청시 서버에서 회원가입 처리 후 데이터로 리턴을 받고
다시 웹에서 메인 페이지를 요청을 하여 서버에서 해당 html파일을 리턴을 해주어
클라이언트는 회원 가입 후 메인 페이지로 이동을하여 회원가입이 잘 되었는지 확인을 한다. 

! 다운로드 할 때 사용자가 기다리는 것을 pending이라고 함

두 번째 이유 : 비동기 통신을 하기 위해 사용하는 것

비동기 통신을 하기 위해 사용하는 것
비동기 통신 : 절차적으로 일을 수행을 하는데 일의 순서에 맞지 않게(상관없이) 처리를 하는 것
콜백 : 하던일을 멈추고 다시 돌아가야 하는 것


비동기적 실행 : 원래는 코드가 적혀져 있는 순서대로 위에서부터 순서대로 실행이 끝나면 다음 순서를 실행하고 이런식으로 이루워지는데
비동기적 실행은 순서대로 실행을 하고 있다가 pending(저장장치에서 다운로드)가 발생하면 CPU에서 저 일을 저장 장치에게 맡기고(끝나면 CPU한테 알려달라고함)
다음 순서중 CPU가 처리할 수 있는 것을 실행하고 있다가 도중에 pending이 끝나면 다시 콜백을 하여 순차적으로 실행하는 것을 말한다.



동기적 실행:  순차적으로 실행이 되고 무조건 먼저 실행이 되고 있는 것을 끝 마친 뒤 다음 순서를 실행하는 것

